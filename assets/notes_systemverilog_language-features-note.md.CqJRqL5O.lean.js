import{_ as i,c as a,a2 as n,o as l}from"./chunks/framework.CbP2pKAi.js";const y=JSON.parse('{"title":"Language features note","description":"","frontmatter":{"slug":"language-features-note"},"headers":[],"relativePath":"notes/systemverilog/language-features-note.md","filePath":"notes/systemverilog/language-features-note.md","lastUpdated":null}'),t={name:"notes/systemverilog/language-features-note.md"};function e(h,s,p,k,d,r){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="language-features-note" tabindex="-1">Language features note <a class="header-anchor" href="#language-features-note" aria-label="Permalink to &quot;Language features note&quot;">​</a></h1><ul><li><p>For multiple  <strong><code>@</code></strong>  inside a block:</p><ul><li>The first  <strong><code>@</code></strong>  have to be happened first before any sub sequential  <strong><code>@</code></strong>  to be evaluated and executed</li><li>They evaluate top down</li><li>Example</li></ul><div class="language-system-verilog vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">system-verilog</span><pre class="shiki shiki-themes vitesse-light vitesse-black vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#444444;">\`</span><span style="--shiki-light:#AB5E3F;--shiki-dark:#C4704F;">define</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> TOTAL_ENTRIES</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 10</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#444444;">\`</span><span style="--shiki-light:#AB5E3F;--shiki-dark:#C4704F;">define</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> OUTPUT_WIDTH</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 8</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">module</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> associative_array</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">(</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  input</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">                         bit</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> clk</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  input</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">                         bit</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> rst_n</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  input</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">                         bit</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> i_req</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  input</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">                         bit</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> i_ready</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  output</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">                        bit</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> o_valid</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  output</span><span style="--shiki-light:#999999;--shiki-dark:#444444;"> [\`</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">OUTPUT_WIDTH</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#444444;">]</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    o_data</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">)</span><span style="--shiki-light:#999999;--shiki-dark:#444444;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">  always</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> @</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">(</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">posedge</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> i_ready</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">) </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">begin</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    @</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">(</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">posedge</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> clk</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">);</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    if</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;"> (</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">i_req</span><span style="--shiki-light:#999999;--shiki-dark:#444444;"> ==</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">) </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">begin</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      $display</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ASSERTED i_req</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">);</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    end</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    $display</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">CLOCK WENT HIGH</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">);</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">    </span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">    </span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    @</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">(</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">posedge</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> i_req</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">);</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    $display</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">ASSERTING i_req</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">);</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">  end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">endmodule</span></span></code></pre></div><blockquote><p>The <code>@(posedge clk)</code> have to be happened before the <code>@(posedge i_req)</code> to be checked and to display the <code>ASSERTING i_req</code> statement</p></blockquote></li><li><p>For using <code>import pkg::class</code> statement</p><ul><li><p>The <code>import</code> only valid till the first class definition only</p><div class="language-system-verilog vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">system-verilog</span><pre class="shiki shiki-themes vitesse-light vitesse-black vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> pkg</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">::</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">a</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">class</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> b</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> c</span><span style="--shiki-light:#999999;--shiki-dark:#444444;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">	a</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> a_i</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">endclass</span><span style="--shiki-light:#999999;--shiki-dark:#444444;"> :</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> b</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">class</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> d</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> extends</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> e</span><span style="--shiki-light:#999999;--shiki-dark:#444444;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">	a</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> a_i</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">; </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// INVALID type definition here</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">	pkg</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">::a</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> a_i</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CACC;">; </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// VALID type definition</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">endclass</span><span style="--shiki-light:#999999;--shiki-dark:#444444;"> :</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> d</span></span></code></pre></div><blockquote><p>Doesn’t know if it is correct in other cases since in my case it only able to compile when using the VALID type definition above</p></blockquote></li></ul></li><li><p>For overriding virtual method</p><ul><li><strong>NOTE</strong>: The argument’s type and NAME must match also</li></ul></li><li><p>For variables declare as local variables in a function</p><p>These variables maybe created as static one, meaning one variable instance may being used for many function calls</p></li></ul>`,2)]))}const o=i(t,[["render",e]]);export{y as __pageData,o as default};
