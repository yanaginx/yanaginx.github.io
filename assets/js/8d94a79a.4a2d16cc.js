"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[787],{3905:(t,e,n)=>{n.d(e,{Zo:()=>g,kt:()=>k});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function s(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var l=a.createContext({}),p=function(t){var e=a.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):s(s({},e),t)),n},g=function(t){var e=p(t.components);return a.createElement(l.Provider,{value:e},t.children)},d="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,l=t.parentName,g=i(t,["components","mdxType","originalType","parentName"]),d=p(n),m=r,k=d["".concat(l,".").concat(m)]||d[m]||c[m]||o;return n?a.createElement(k,s(s({ref:e},g),{},{components:n})):a.createElement(k,s({ref:e},g))}));function k(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=t,i[d]="string"==typeof t?t:r,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4869:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={slug:"understanding-the-factory-and-configuration"},s="Understanding the Factory and Configuration",i={unversionedId:"UVM/Advanced UVM/Understanding the Factory and Configuration 7addb239f3544199955d06914cacc652",id:"UVM/Advanced UVM/Understanding the Factory and Configuration 7addb239f3544199955d06914cacc652",title:"Understanding the Factory and Configuration",description:"Contents are extracted from the Advanced UVM sessions by Verification Academy.",source:"@site/docs/UVM/Advanced UVM/Understanding the Factory and Configuration 7addb239f3544199955d06914cacc652.md",sourceDirName:"UVM/Advanced UVM",slug:"/UVM/Advanced UVM/understanding-the-factory-and-configuration",permalink:"/docs/UVM/Advanced UVM/understanding-the-factory-and-configuration",draft:!1,tags:[],version:"current",frontMatter:{slug:"understanding-the-factory-and-configuration"},sidebar:"tutorialSidebar",previous:{title:"The Proper Care and Feeding of Sequences",permalink:"/docs/UVM/Advanced UVM/the-proper-care-and-feeding-of-sequences"},next:{title:"Using the Register Layer",permalink:"/docs/UVM/Advanced UVM/using-the-register-layer"}},l={},p=[{value:"2 customization mechanism",id:"2-customization-mechanism",level:2},{value:"Factory",id:"factory",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Factory",id:"factory-1",level:2},{value:"<code>create()</code> vs <code>new()</code>",id:"create-vs-new",level:3},{value:"Registering with Factory",id:"registering-with-factory",level:3},{value:"Overriding a type",id:"overriding-a-type",level:3},{value:"Using parameterized types",id:"using-parameterized-types",level:3},{value:"Tests are components, too!",id:"tests-are-components-too",level:3},{value:"Use the factory for objects",id:"use-the-factory-for-objects",level:3},{value:"Configuration database",id:"configuration-database",level:2},{value:"<code>uvm_config_db</code>",id:"uvm_config_db",level:3},{value:"UVM Features",id:"uvm-features",level:3},{value:"Summary",id:"summary",level:2}],g={toc:p};function d(t){let{components:e,...o}=t;return(0,r.kt)("wrapper",(0,a.Z)({},g,o,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"understanding-the-factory-and-configuration"},"Understanding the Factory and Configuration"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Contents are extracted from the Advanced UVM sessions by ",(0,r.kt)("a",{parentName:"p",href:"https://verificationacademy.com/"},"Verification Academy"),".")),(0,r.kt)("h2",{id:"2-customization-mechanism"},"2 customization mechanism"),(0,r.kt)("h3",{id:"factory"},"Factory"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Allows test to change the type of a desired component or object"),(0,r.kt)("li",{parentName:"ul"},"Typically set up at start of simulation")),(0,r.kt)("h3",{id:"configuration"},"Configuration"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Allows parents to define properties for children",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Static (build-time) - Highest parent \u201cwins\u201d"),(0,r.kt)("li",{parentName:"ul"},"Dynamic (run-time) - Last set \u201dwins\u201d"))),(0,r.kt)("li",{parentName:"ul"},"All UVM components get their own configuration",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Optionally use to configure their children")))),(0,r.kt)("h2",{id:"factory-1"},"Factory"),(0,r.kt)("h3",{id:"create-vs-new"},(0,r.kt)("inlineCode",{parentName:"h3"},"create()")," vs ",(0,r.kt)("inlineCode",{parentName:"h3"},"new()")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Untitled",src:n(8372).Z,width:"2477",height:"1165"})),(0,r.kt)("aside",null,(0,r.kt)("img",{src:"https://www.notion.so/icons/info-alternate_green.svg",alt:"https://www.notion.so/icons/info-alternate_green.svg",width:"40px"})," Factory allow to alternate the type of the created component without modifying the instantiating code"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Untitled",src:n(3438).Z,width:"994",height:"465"})),(0,r.kt)("h3",{id:"registering-with-factory"},"Registering with Factory"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Objects are registered with the factory via macros")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-verilog"},"`uvm_object_utils(<type>)\n`uvm_component_utils(<type>)\n")),(0,r.kt)("p",null,"The macro utils will create a wrapper type that registering in the factory to allow accessing it from the factory via the ",(0,r.kt)("inlineCode",{parentName:"p"},"create()")," method"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Untitled",src:n(5451).Z,width:"1001",height:"396"})),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Untitled",src:n(7924).Z,width:"999",height:"450"})),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"**type_id::set_type_override(<type>);")," is a static methods in the wrapper**"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Test now have the ability to override the type of component that returned from the factory")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"**get_type()"),' returns the type "handle"**'),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Untitled",src:n(1073).Z,width:"1007",height:"451"})),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},'**set_inst_override(<type>, "<instance>");')," can also be used in addition to ",(0,r.kt)("inlineCode",{parentName:"p"},"set_type_override")," for overriding instance**"),(0,r.kt)("h3",{id:"overriding-a-type"},"Overriding a type"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Untitled",src:n(3715).Z,width:"986",height:"503"})),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Untitled",src:n(3106).Z,width:"1000",height:"497"})),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Untitled",src:n(5337).Z,width:"1002",height:"501"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"When doing ",(0,r.kt)("inlineCode",{parentName:"p"},"type_override")," in the factory, the last change will be reflected"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"set_inst_override")," take precedence over ",(0,r.kt)("inlineCode",{parentName:"p"},"set_type_override")," "),(0,r.kt)("p",{parentName:"blockquote"},"\u2192 Will be the case regards of the order in which ",(0,r.kt)("inlineCode",{parentName:"p"},"set_type_override")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"set_inst_override")," is executed"),(0,r.kt)("p",{parentName:"blockquote"},"\u21d2 The U2 in the example will always be a triangle")),(0,r.kt)("h3",{id:"using-parameterized-types"},"Using parameterized types"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Untitled",src:n(8012).Z,width:"1017",height:"498"})),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Untitled",src:n(1152).Z,width:"1014",height:"503"})),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Untitled",src:n(4282).Z,width:"1016",height:"500"})),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Untitled",src:n(649).Z,width:"1011",height:"497"})),(0,r.kt)("h3",{id:"tests-are-components-too"},"Tests are components, too!"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},"**"))))),"run_test() creates the test from the factory",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},"**")))))),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Untitled",src:n(7360).Z,width:"931",height:"377"})),(0,r.kt)("p",null,"The test type instantiation will be determined using the command line plusargs ",(0,r.kt)("inlineCode",{parentName:"p"},"+UVM_TESTNAME")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},"****"))))))))))),"Always call ",(0,r.kt)("inlineCode",{parentName:"p"},"run_test()")," with null argument**"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"run_test()")," can be called with an argument to specify a default test to be run when there is no test name specified when running the simulation"),(0,r.kt)("p",{parentName:"blockquote"},"\u21d2 Recommended to call ",(0,r.kt)("inlineCode",{parentName:"p"},"run_test()")," with null argument")),(0,r.kt)("h3",{id:"use-the-factory-for-objects"},"Use the factory for objects"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Untitled",src:n(3259).Z,width:"961",height:"479"})),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Untitled",src:n(5338).Z,width:"962",height:"479"})),(0,r.kt)("h2",{id:"configuration-database"},"Configuration database"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},"**")))),"Explicitly typed",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},"**"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},"**"))))))))))))))),"Tied to the hierarchical scopes",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},"**")))))))))))))))),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Untitled",src:n(7718).Z,width:"279",height:"372"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The value of the component on the highest of the hierarchy will be used")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"build_phase")," happens top-down, so when setting the value of driver\u2019s x, the driver isn\u2019t instantiate yet \u21d2 Using configuration database will allow this to be done"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Untitled",src:n(1896).Z,width:"638",height:"367"})),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Untitled",src:n(4523).Z,width:"359",height:"475"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Allow reusability since the test only care about setting up the value on the environment")),(0,r.kt)("h3",{id:"uvm_config_db"},(0,r.kt)("inlineCode",{parentName:"h3"},"uvm_config_db")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},"****")))))))),"Uses a ",(0,r.kt)("inlineCode",{parentName:"p"},"set()"),"/",(0,r.kt)("inlineCode",{parentName:"p"},"get()")," API**"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"No casting on ",(0,r.kt)("inlineCode",{parentName:"li"},"get()")),(0,r.kt)("li",{parentName:"ul"},"Linked to component hierarchy")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-verilog"},'uvm_config_db #(<type>)::set(this, "<inst>", "<field>", value);\nuvm_config_db #(<type>)::get(this, "<inst>", "<field>", value);\n')),(0,r.kt)("p",null,"On the ",(0,r.kt)("inlineCode",{parentName:"p"},"set"),":"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"this"),": the component making the call"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"<inst>"),": Is the name of component we wanna set relative to the component doing the ",(0,r.kt)("inlineCode",{parentName:"p"},"set"))),(0,r.kt)("p",null,"On the ",(0,r.kt)("inlineCode",{parentName:"p"},"get"),":"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"<inst>")," is usually set to null since the ",(0,r.kt)("inlineCode",{parentName:"p"},"this")," already content the full path to the component")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Untitled",src:n(7422).Z,width:"777",height:"175"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"If field name is the same, we get the value from the database and return it")),(0,r.kt)("h3",{id:"uvm-features"},"UVM Features"),(0,r.kt)("p",null,"Passing virtual interface handle from the top level module to the test"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Untitled",src:n(7236).Z,width:"944",height:"441"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Call the ",(0,r.kt)("inlineCode",{parentName:"p"},"uvm_config_db::set")," to pass down the ",(0,r.kt)("inlineCode",{parentName:"p"},"env_cfg")," object"),(0,r.kt)("p",{parentName:"blockquote"},"Instance name supports pattern matching glob-style or regex"),(0,r.kt)("p",{parentName:"blockquote"},"In the example, all instance looking for the object with the field name ",(0,r.kt)("inlineCode",{parentName:"p"},"config")," of type ",(0,r.kt)("inlineCode",{parentName:"p"},"env_config")," will be able to do so")),(0,r.kt)("p",null,"\u21d2 ",(0,r.kt)("inlineCode",{parentName:"p"},"uvm_config_db")," can affect the performance"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Untitled",src:n(3151).Z,width:"974",height:"306"})),(0,r.kt)("h2",{id:"summary"},"Summary"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},"****"))))))))))))))),"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"uvm_object/component_utils")," macro to register with factory**"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Always call ",(0,r.kt)("inlineCode",{parentName:"strong"},"<type>::type_id::create()"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Register tests with the factory")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Call ",(0,r.kt)("inlineCode",{parentName:"strong"},"run_test()")," with null argument")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Specify which test via the command line")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Use config DB at build-time")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Components get their config before configuring children"),(0,r.kt)("li",{parentName:"ul"},"Highest set wins")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},"**")))))))))))),"Use config DB at run-time",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},(0,r.kt)("strong",{parentName:"strong"},"**"))))))))))))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Last set wins"),(0,r.kt)("li",{parentName:"ul"},"Up to the \u201cgetter\u201d to decide when it\u2019s legal")))}d.isMDXComponent=!0},3438:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/Untitled 1-d320f99d5c8a3ffc532dc510c6dc04f1.png"},4282:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/Untitled 10-74968d63ce1be8b1e303bd6a1e35b07f.png"},649:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/Untitled 11-e240cd26724db4451cae9fd387ac61c0.png"},7360:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/Untitled 12-78a91e05bd29b447b525c08a2de92089.png"},3259:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/Untitled 13-3f3c1bb496f88ddefff300fda5acc7e5.png"},5338:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/Untitled 14-a0d8104410b6eaf908b2f7235a97166e.png"},7718:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/Untitled 15-5323faeabab0fd83925ed8aaba78954e.png"},1896:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/Untitled 16-c224bbaac028d849ff74abd63b1f3fb0.png"},4523:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/Untitled 17-eec24fb4e41386a0a80b6601407b6f9c.png"},7422:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/Untitled 18-71169ecde883305ec4c0b3cd58c76b8d.png"},7236:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/Untitled 19-e54712b0c7289e572752fa53758897b9.png"},5451:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/Untitled 2-54201074011eacab03a152ba807498bc.png"},3151:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/Untitled 20-2ad306f7cb4a13652090414d556a337f.png"},7924:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/Untitled 3-8cb0b9b9f612c4ef79ab81d7f494779a.png"},1073:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/Untitled 4-0a7c566c17ac9b7a0a278e49894a9b2c.png"},3715:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/Untitled 5-473780e4d64b7c74c2cae2a953e25deb.png"},3106:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/Untitled 6-be719a9afbe5c0ebed70a11e3d3c047b.png"},5337:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/Untitled 7-545da59e3d87dd82d669d9e1a087fa3e.png"},8012:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/Untitled 8-7cacdfeed600b234a7630fc464aa2f46.png"},1152:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/Untitled 9-83761573ab4378ce6090e6107423e882.png"},8372:(t,e,n)=>{n.d(e,{Z:()=>a});const a=n.p+"assets/images/Untitled-1da91328fbd6228dd116a41183a2cbd2.png"}}]);