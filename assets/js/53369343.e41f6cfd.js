"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[316],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),d=r,g=c["".concat(s,".").concat(d)]||c[d]||m[d]||i;return n?a.createElement(g,o(o({ref:t},u),{},{components:n})):a.createElement(g,o({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8960:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={slug:"language-features-note"},o="Language features note",l={unversionedId:"SystemVerilog/Language features note 8f7095f56eea4011abe40b31bddd8ed2",id:"SystemVerilog/Language features note 8f7095f56eea4011abe40b31bddd8ed2",title:"Language features note",description:"- For multiple \xa0@\xa0 inside a block:",source:"@site/docs/SystemVerilog/Language features note 8f7095f56eea4011abe40b31bddd8ed2.md",sourceDirName:"SystemVerilog",slug:"/SystemVerilog/language-features-note",permalink:"/docs/SystemVerilog/language-features-note",draft:!1,tags:[],version:"current",frontMatter:{slug:"language-features-note"},sidebar:"tutorialSidebar",previous:{title:"SystemVerilog",permalink:"/docs/category/systemverilog"},next:{title:"SystemVerilog OOP for UVM",permalink:"/docs/SystemVerilog/systemverilog-oop-for-uvm"}},s={},p=[],u={toc:p};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"language-features-note"},"Language features note"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For multiple \xa0",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"@")),"\xa0 inside a block:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The first \xa0",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"@")),"\xa0 have to be happened first before any sub sequential \xa0",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"@")),"\xa0 to be evaluated and executed")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"They evaluate top down")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Example"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-verilog"},'`define TOTAL_ENTRIES 10\n`define OUTPUT_WIDTH 8\n\nmodule associative_array(\n  input                         bit clk,\n  input                         bit rst_n,\n  input                         bit i_req,\n  input                         bit i_ready,\n  output                        bit o_valid,\n  output [`OUTPUT_WIDTH-1:0]    o_data\n);\n\n  always @(posedge i_ready) begin\n    @(posedge clk);\n    if (i_req == 1) begin\n      $display("ASSERTED i_req");\n    end\n    $display("CLOCK WENT HIGH");\n    \n    \n    @(posedge i_req);\n    $display("ASSERTING i_req");\n  end\n\nendmodule\n')),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"@(posedge clk)")," have to be happened before the ",(0,r.kt)("inlineCode",{parentName:"p"},"@(posedge i_req)")," to be checked and to display the ",(0,r.kt)("inlineCode",{parentName:"p"},"ASSERTING i_req")," statement"))))),(0,r.kt)("li",{parentName:"ul"},"For using ",(0,r.kt)("inlineCode",{parentName:"li"},"import pkg::class")," statement",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"import")," only valid till the first class definition only",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-verilog"},"import pkg::a;\n\nclass b extends c;\n    a a_i;\nendclass : b\n\nclass d extends e;\n    a a_i; // INVALID type definition here\n    pkg::a a_i; // VALID type definition\nendclass : d \n")),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"Doesn\u2019t know if it is correct in other cases since in my case it only able to compile when using the VALID type definition above"))))),(0,r.kt)("li",{parentName:"ul"},"For overriding virtual method",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"NOTE"),": The argument\u2019s type and NAME must match also"))),(0,r.kt)("li",{parentName:"ul"},"For variables declare as local variables in a function","  These variables maybe created as static one, meaning one variable instance may being used for many function calls")))}c.isMDXComponent=!0}}]);